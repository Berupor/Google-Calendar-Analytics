{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Credentials/","title":"Credentials","text":"<p>Getting Google API Credentials</p> <p>To use the Google Calendar API, you will need to obtain API credentials from the Google Cloud Console. Follow these steps to get the credentials:</p> <ol> <li>Go to the Google Cloud Console.</li> <li>Create a new project or select an existing project.</li> <li>Navigate to the \"APIs &amp; Services\" tab and click on \"Credentials\".</li> <li>Click on the \"Create credentials\" button and select \"OAuth client ID\".</li> <li>Select \"Desktop app\" as the application type.</li> <li>Enter a name for the client ID and click \"Create\".</li> <li>Download the client ID and client secret to your computer.</li> <li>Store the client ID and secret securely in your application's configuration file or environment variables.</li> <li>When you run your application, it will prompt you to authenticate with your Google account and grant access to the Google Calendar API.</li> <li>Note that depending on the Google Cloud Console dashboard, some of these steps may differ slightly, but the general process is the same. Once you have obtained the credentials, you will be able to use them to authenticate your application and access the Google Calendar API.</li> </ol>"},{"location":"Credentials/#after-you-have-obtained-the-credentialsjson","title":"After you have obtained the credentials.json","text":"<p>You can use it to authenticate your application and access the Google Calendar Analytics.</p> <p>Move <code>credentials.json</code> file to your project folder and write: <pre><code>from google_calendar_analytics.authentication.auth import CalendarAuth\ncreds = CalendarAuth(token_path=\"your_folder/token.json\",\ncredentials_path=\"your_folder/credentials.json\").get_credentials()\n</code></pre></p> <p>Congratulations! You have successfully obtained the credentials and can now use them to authenticate your application and access the Google Calendar Analytics.</p>"},{"location":"Customization/","title":"Customization","text":"<p>You can customize your plot by creating an instance of AnalyzerBuilder with different options, such as the plot type, transparency, dark theme, and maximum number of events to be analyzed.</p> <pre><code>from google_calendar_analytics import AnalyzerBuilder\nanalyzer = (\nAnalyzerBuilder()\n.with_credentials(creds)\n.with_plot_type(\"Bar\")  # Choose a plot type: Bar, Line, MultyLine, or Pie\n.with_transparency(0.5)  # Set the transparency of the chart\n.with_dark_theme(True)  # Enable dark theme for the chart\n.with_max_events(10)  # Set the maximum number of events to be analyzed\n.with_ascending(False)  # Sort the events in descending order of duration\n.build()  # Build the analyzer instance\n)\n</code></pre>"},{"location":"Customization/#plot-types","title":"Plot types","text":"<p>You can choose from the following plot types:</p>"},{"location":"Customization/#bar","title":"Bar","text":""},{"location":"Customization/#line","title":"Line","text":""},{"location":"Customization/#multyline","title":"MultyLine","text":""},{"location":"Customization/#pie","title":"Pie","text":""},{"location":"Customization/#restrictions","title":"Restrictions","text":"<p>Note that not all plot types have the <code>max_events</code> variable available. If you want to limit the number of events to be analyzed, you should use the <code>Bar</code>, <code>Pie</code> plot type instead of <code>Line</code> or <code>MultyLine</code>.</p> <p>Also, you can't use <code>analyze_many</code> method with <code>Line</code> or <code>MultyLine</code> plot types because these plots are not suitable for multiple events.</p>"},{"location":"Getting-started/","title":"Getting started","text":"<p>To use the Google Calendar Analytics program, first install the dependencies by running the following command:</p> <pre><code>pip install google-calendar-analytics\n</code></pre> <p>You can then import the AnalyzerFacade and Analyzer builder classs and create an instances with your Google Calendar credentials:</p>"},{"location":"Getting-started/#how-to-get-credentials-from-google","title":"How to get credentials from Google?","text":"<ol> <li>Google documentation</li> <li>Our documentation</li> </ol> <pre><code>import asyncio\nfrom datetime import datetime\nfrom google.oauth2.credentials import Credentials\nfrom google_calendar_analytics import AnalyzerFacade, AnalyzerBuilder\n# (You can get it from Google OAuth2 in you web app or from link above)\n# Example of creds dictionary. (You can get it from Google OAuth2 in your web app)\ncreds = {\n\"token\": \"ya29.a0AVvZVsoH4qZcrGK25VwsXspJv-r9K-\",\n\"refresh_token\": \"1//0hwlhrtalKgeRCgYIARAAGBESNwF-\",\n\"token_uri\": \"https://oauth2.googleapis.com/token\",\n\"client_id\": \"395np.apps.googleusercontent.com\",\n\"client_secret\": \"GOCSPXFqoucE03VRVz\",\n\"scopes\": [\"https://www.googleapis.com/auth/calendar\"],\n\"expiry\": \"2023-02-18T15:30:15.674219Z\"\n}\ncreds = Credentials.from_authorized_user_info(creds)\n</code></pre> <p>Once you have created the credentials, you can create an instance of the AnalyzerFacade with AnalyzerBuilder class and use it to analyze your calendar:</p> <pre><code>analyzer = (\nAnalyzerBuilder()\n.with_credentials(creds)\n.with_plot_type(\"Bar\")\n.build()\n)\n# Choose time range for analysis\nstart_time = datetime(2023, 3, 1)\nend_time = datetime(2023, 3, 18)\nplot = await analyzer.analyze_one(start_time, end_time, event_name=\"Programming\")\nplot.show()\n</code></pre>"},{"location":"Main/","title":"Analytics Docs","text":"<p>Welcome to the documentation for the Calendar Analyzer project. This project provides a module that allows you to analyze events from a Google Calendar and generate charts to visualize the data.</p>"},{"location":"Main/#table-of-contents","title":"Table Of Contents","text":"<ol> <li>Getting Started</li> <li>Customization</li> <li>Credentials</li> <li>Reference</li> </ol> <p>Quickly find what you're looking for depending on your use case by looking at the different pages.</p>"},{"location":"References/","title":"References","text":"<p>::: google_calendar_analytics.analytics     title: Google Calendar Analytics</p> <p>::: google_calendar_analytics.visualization.visualizer_factory     title: Visualisation module</p>"}]}